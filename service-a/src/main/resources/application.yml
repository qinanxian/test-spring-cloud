server:
  port: 8081
spring:
  application:
    #服务名称 - 服务之间使用名称进行通讯
    name: service-object-a
eureka:
  client:
    service-url:
      #服务中心服务地址
      defaultZone: http://localhost:8080/eureka
      #是否将自己注册到服务中心
      register-with-eureka: true
      #是否需要搜索服务信息
      fetch-registry: true
    instance:
      #使用ip地址注册到注册中心
      prefer-ip-address: true
      # 注册中心列表中显示的状态参数
      instance-id: ${spring.cloud.client.ip-address}:${server.port}
ribbon:
  ReadTimeout: 120000  #请求处理的超时时间
  ConnectTimeout: 30000  #请求连接的超时时间
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: false #这个配置的含义是忽略hystrix的超时时间 因为我们服务器配置延时5秒 hystrix默认就执行了fallback

redis:
  # redis数据库索引(默认为0)，我们使用索引为0的数据库，避免和其他数据库冲突
  database: 0
  # redis服务器地址（默认为loaclhost）
  host: 127.0.0.1
  # redis端口（默认为6379）
  post: 6379
  # redis连接超时时间（单位毫秒）
  timeout: 0
  # redis连接池配置
  pool:
    # 最大可用连接数（默认为8，负数表示无限）
    max-active: 8
    # 最大空闲连接数（默认为8，负数表示无限）
    max-idle: 8
    # 最小空闲连接数（默认为0，该值只有为正数才有用）
    min-idle: 0
    # 从连接池中获取连接最大等待时间（默认为-1，单位为毫秒，负数表示无限）
    max-wait: -1